'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = require('react');
var React__default = _interopDefault(React);
var ReactDOM = _interopDefault(require('react-dom'));

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _possibleConstructorReturn(self, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _createSuper(Derived) {
  return function () {
    var Super = _getPrototypeOf(Derived),
        result;

    if (_isNativeReflectConstruct()) {
      var NewTarget = _getPrototypeOf(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return _possibleConstructorReturn(this, result);
  };
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}

function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(n);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];

  return arr2;
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

var ReactPropTypesSecret_1 = ReactPropTypesSecret;

function emptyFunction() {}
function emptyFunctionWithReset() {}
emptyFunctionWithReset.resetWarningCache = emptyFunction;

var factoryWithThrowingShims = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret_1) {
      // It is still safe when called from React.
      return;
    }
    var err = new Error(
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
    err.name = 'Invariant Violation';
    throw err;
  }  shim.isRequired = shim;
  function getShim() {
    return shim;
  }  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,

    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };

  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

var propTypes = createCommonjsModule(function (module) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

{
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = factoryWithThrowingShims();
}
});

var Fa = /*#__PURE__*/function (_React$Component) {
  _inherits(Fa, _React$Component);

  var _super = _createSuper(Fa);

  function Fa() {
    _classCallCheck(this, Fa);

    return _super.apply(this, arguments);
  }

  _createClass(Fa, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          border = _this$props.border,
          brand = _this$props.brand,
          className = _this$props.className,
          fab = _this$props.fab,
          fal = _this$props.fal,
          far = _this$props.far,
          fixed = _this$props.fixed,
          flip = _this$props.flip,
          icon = _this$props.icon,
          inverse = _this$props.inverse,
          light = _this$props.light,
          list = _this$props.list,
          pull = _this$props.pull,
          pulse = _this$props.pulse,
          regular = _this$props.regular,
          rotate = _this$props.rotate,
          size = _this$props.size,
          spin = _this$props.spin,
          stack = _this$props.stack,
          attributes = _objectWithoutProperties(_this$props, ["border", "brand", "className", "fab", "fal", "far", "fixed", "flip", "icon", "inverse", "light", "list", "pull", "pulse", "regular", "rotate", "size", "spin", "stack"]);

      var iconPrefix = brand || fab ? "fab" : light || fal ? "fal" : regular || far ? "far" : "fa";
      var classes = [];
      classes.push(iconPrefix);
      list && classes.push("fa-li");
      icon && classes.push("fa-".concat(icon));
      size && classes.push("fa-".concat(size));
      fixed && classes.push("fa-fw");
      pull && classes.push("fa-pull-".concat(pull));
      border && classes.push("fa-border");
      spin && classes.push("fa-spin");
      pulse && classes.push("fa-pulse");
      rotate && classes.push("fa-rotate-".concat(rotate));
      flip && classes.push("fa-flip-".concat(flip));
      inverse && classes.push("fa-inverse");
      stack && classes.push("fa-".concat(stack));
      className && classes.push(className);
      return /*#__PURE__*/React__default.createElement("i", _extends({}, attributes, {
        className: classes.join(' ')
      }));
    }
  }]);

  return Fa;
}(React__default.Component);

Fa.propTypes = {
  icon: propTypes.string.isRequired,
  border: propTypes.bool,
  brand: propTypes.bool,
  className: propTypes.string,
  fab: propTypes.bool,
  fal: propTypes.bool,
  far: propTypes.bool,
  fixed: propTypes.bool,
  flip: propTypes.string,
  inverse: propTypes.string,
  light: propTypes.bool,
  list: propTypes.bool,
  pull: propTypes.string,
  pulse: propTypes.bool,
  regular: propTypes.bool,
  rotate: propTypes.string,
  spin: propTypes.bool,
  size: propTypes.string,
  stack: propTypes.string
};
Fa.defaultProps = {
  border: false,
  brand: false,
  className: "",
  fab: false,
  fal: false,
  far: false,
  fixed: false,
  flip: "",
  inverse: "",
  light: false,
  list: false,
  pull: "",
  pulse: false,
  regular: false,
  rotate: "",
  spin: false,
  size: "",
  stack: ""
};

var message = function message(props) {
  var hasError = props.hasError,
      messageError = props.messageError,
      messageDefault = props.messageDefault;
  return /*#__PURE__*/React__default.createElement("div", {
    "data-test": "component-message",
    className: "card-text file-upload-message"
  }, /*#__PURE__*/React__default.createElement(Fa, {
    "data-test": "component-icon",
    icon: "cloud-upload-alt"
  }), /*#__PURE__*/React__default.createElement("p", {
    "data-test": "component-message-default"
  }, messageDefault), hasError && /*#__PURE__*/React__default.createElement("p", {
    "data-test": "component-message-error",
    className: "file-upload-error"
  }, messageError));
};

message.propTypes = {
  hasError: propTypes.bool.isRequired,
  messageError: propTypes.string.isRequired,
  messageDefault: propTypes.string.isRequired
};

var errors = function errors(props) {
  var errorMessagesArray = props.errorMessagesArray;
  return /*#__PURE__*/React__default.createElement("div", {
    "data-test": "component-list",
    className: "file-upload-errors-container"
  }, /*#__PURE__*/React__default.createElement("ul", null, errorMessagesArray.map(function (message) {
    return /*#__PURE__*/React__default.createElement("li", {
      "data-test": "component-list-item",
      key: message
    }, message);
  })));
};

errors.propTypes = {
  errorMessagesArray: propTypes.arrayOf(propTypes.string).isRequired
};

var preview = function preview(props) {
  var src = props.src,
      fileExt = props.fileExt,
      name = props.name,
      messageReplace = props.messageReplace;
  return /*#__PURE__*/React__default.createElement("div", {
    "data-test": "component-preview-wrapper",
    className: "file-upload-preview"
  }, /*#__PURE__*/React__default.createElement("span", {
    className: "file-upload-render"
  }, src ? /*#__PURE__*/React__default.createElement("img", {
    "data-test": "component-preview-img",
    className: "file-upload-preview-img",
    alt: "",
    src: src
  }) : /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(Fa, {
    "data-test": "component-preview-icon",
    icon: "file"
  }), /*#__PURE__*/React__default.createElement("span", {
    "data-test": "component-preview-ext",
    className: "file-upload-extension"
  }, fileExt))), /*#__PURE__*/React__default.createElement("div", {
    className: "file-upload-infos"
  }, /*#__PURE__*/React__default.createElement("div", {
    className: "file-upload-infos-inner"
  }, /*#__PURE__*/React__default.createElement("p", {
    className: "file-upload-filename"
  }, /*#__PURE__*/React__default.createElement("span", {
    "data-test": "component-preview-name",
    className: "file-upload-filename-inner"
  }, name)), /*#__PURE__*/React__default.createElement("p", {
    "data-test": "component-preview-msg",
    className: "file-upload-infos-message"
  }, messageReplace))));
};

preview.propTypes = {
  src: propTypes.string,
  fileExt: propTypes.string,
  name: propTypes.string.isRequired,
  messageReplace: propTypes.string.isRequired
};

function styleInject(css, ref) {
  if ( ref === void 0 ) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') { return; }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css = ".Ripple {\r\n  position: absolute;\r\n  background: rgba(255, 255, 255, 0.3);\r\n  border-radius: 50%;\r\n  opacity: 1;\r\n  transform: scale(0);\r\n}\r\n\r\n.Ripple-outline {\r\n  background: rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.Ripple.is-reppling {\r\n  animation: ripple 0.5s linear;\r\n}\r\n\r\n.Ripple-parent {\r\n  position: relative;\r\n  overflow: hidden;\r\n  touch-action: none;\r\n}\r\n\r\n@keyframes ripple {\r\n  100% {\r\n    opacity: 0;\r\n    transform: scale(3);\r\n  }\r\n}\r\n";
styleInject(css);

var Waves = /*#__PURE__*/function (_React$Component) {
  _inherits(Waves, _React$Component);

  var _super = _createSuper(Waves);

  function Waves(props) {
    var _this;

    _classCallCheck(this, Waves);

    _this = _super.call(this, props);
    _this.state = {
      animate: false,
      width: 0,
      height: 0,
      top: 0,
      left: 0,
      cursorPos: props.cursorPos
    };
    return _this;
  }

  _createClass(Waves, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      var _this2 = this;

      if (prevState.cursorPos.time !== this.props.cursorPos.time) {
        if (prevState.animate) {
          this.setState({
            animate: false,
            cursorPos: this.props.cursorPos
          }, function () {
            _this2.reppling();
          });
        } else this.reppling();
      }
    }
  }, {
    key: "reppling",
    value: function reppling() {
      // Get the element
      var $ripple = ReactDOM.findDOMNode(this);
      var $button = $ripple.parentNode;
      var buttonPos = $button.getBoundingClientRect();
      var buttonWidth = $button.offsetWidth;
      var buttonHeight = $button.offsetHeight; // Make a Square Ripple

      var rippleWidthShouldBe = Math.max(buttonHeight, buttonWidth); // Make Ripple Position to be center

      var centerize = rippleWidthShouldBe / 2;
      this.setState({
        animate: true,
        width: rippleWidthShouldBe,
        height: rippleWidthShouldBe,
        top: this.state.cursorPos.top - buttonPos.top - centerize,
        left: this.state.cursorPos.left - buttonPos.left - centerize
      });
    }
  }, {
    key: "render",
    value: function render() {
      return /*#__PURE__*/React__default.createElement("div", {
        className: 'Ripple ' + (this.props.outline || this.props.flat || this.props.dark ? 'Ripple-outline ' : '') + (this.state.animate ? 'is-reppling' : ''),
        style: {
          top: this.state.top + 'px',
          left: this.state.left + 'px',
          width: this.state.width + 'px',
          height: this.state.height + 'px'
        }
      });
    }
  }]);

  return Waves;
}(React__default.Component);

Waves.propTypes = {
  outline: propTypes.bool,
  flat: propTypes.bool,
  animate: propTypes.bool,
  cursorPos: propTypes.object,
  children: propTypes.node
};

var Button = /*#__PURE__*/function (_React$Component) {
  _inherits(Button, _React$Component);

  var _super = _createSuper(Button);

  function Button(props) {
    var _this;

    _classCallCheck(this, Button);

    _this = _super.call(this, props);

    _defineProperty(_assertThisInitialized(_this), "handleClick", function (e) {
      e.stopPropagation(); // Waves - Get Cursor Position

      var cursorPos = {
        top: e.clientY,
        left: e.clientX,
        time: Date.now()
      };

      _this.setState({
        cursorPos: cursorPos
      });
    });

    _this.state = {
      cursorPos: {}
    };
    return _this;
  }

  _createClass(Button, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          active = _this$props.active,
          block = _this$props.block,
          circle = _this$props.circle,
          className = _this$props.className,
          color = _this$props.color,
          disabled = _this$props.disabled,
          download = _this$props.download,
          outline = _this$props.outline,
          size = _this$props.size,
          rounded = _this$props.rounded,
          gradient = _this$props.gradient,
          floating = _this$props.floating,
          flat = _this$props.flat,
          role = _this$props.role,
          type = _this$props.type,
          social = _this$props.social,
          action = _this$props.action,
          Tag = _this$props.tag,
          target = _this$props.target,
          innerRef = _this$props.innerRef,
          attributes = _objectWithoutProperties(_this$props, ["active", "block", "circle", "className", "color", "disabled", "download", "outline", "size", "rounded", "gradient", "floating", "flat", "role", "type", "social", "action", "tag", "target", "innerRef"]);

      var classes = ["btn", "Ripple-parent"];
      size && classes.push("btn-".concat(size));
      className && classes.push(className);
      color && classes.push("btn-".concat(color));

      if (attributes.href && Tag === "button") {
        Tag = "a";
      }

      return /*#__PURE__*/React__default.createElement(Tag, _extends({
        type: Tag === "button" && !type ? "button" : type,
        target: target,
        role: Tag === "a" && !role ? "button" : role,
        className: classes.join(' '),
        ref: innerRef,
        onMouseUp: this.handleClick,
        onTouchStart: this.handleClick
      }, attributes, {
        download: download,
        disabled: disabled
      }), this.props.children, this.props.disabled ? false : /*#__PURE__*/React__default.createElement(Waves, {
        cursorPos: this.state.cursorPos,
        outline: outline,
        flat: flat
      }));
    }
  }]);

  return Button;
}(React__default.Component);

Button.defaultProps = {
  color: "default",
  tag: "button"
};
Button.propTypes = {
  active: propTypes.bool,
  action: propTypes.bool,
  block: propTypes.bool,
  color: propTypes.string,
  disabled: propTypes.bool,
  download: propTypes.string,
  gradient: propTypes.string,
  role: propTypes.string,
  type: propTypes.string,
  outline: propTypes.bool,
  rounded: propTypes.bool,
  circle: propTypes.bool,
  floating: propTypes.bool,
  flat: propTypes.bool,
  innerRef: propTypes.oneOfType([propTypes.func, propTypes.string]),
  onClick: propTypes.func,
  size: propTypes.string,
  social: propTypes.string,
  children: propTypes.node,
  tag: propTypes.string,
  target: propTypes.string,
  className: propTypes.string
};

var button = function button(props) {
  var onClick = props.onClick,
      messageRemove = props.messageRemove;
  return /*#__PURE__*/React__default.createElement(Button, {
    "data-test": "component-remove-btn",
    onClick: onClick,
    size: "sm",
    color: "danger"
  }, messageRemove, /*#__PURE__*/React__default.createElement(Fa, {
    "data-test": "component-icon",
    className: "ml-1",
    far: true,
    icon: "trash-alt"
  }));
};

button.propTypes = {
  onClick: propTypes.func.isRequired,
  messageRemove: propTypes.string.isRequired
};

var submitButton = function submitButton(props) {
  var onClick = props.onClick,
      messageUpload = props.messageUpload;
  return /*#__PURE__*/React__default.createElement(Button, {
    "data-test": "component-submit-btn",
    onClick: onClick,
    size: "sm",
    color: "success",
    type: "submit"
  }, messageUpload, /*#__PURE__*/React__default.createElement(Fa, {
    "data-test": "component-icon",
    className: "ml-1",
    far: true,
    icon: "paper-plane"
  }));
};

submitButton.propTypes = {
  onClick: propTypes.func.isRequired,
  messageUpload: propTypes.string.isRequired
};

var css$1 = ".file-upload {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  cursor: pointer;\n  overflow: hidden;\n  width: 100%;\n  max-width: 100%;\n  height: 200px;\n  padding: 5px 10px;\n  font-size: 1rem;\n  text-align: center;\n  color: #ccc; }\n  .file-upload i {\n    font-size: 3rem; }\n  .file-upload .mask.rgba-stylish-slight {\n    opacity: 0;\n    transition: all 0.15s linear; }\n  .file-upload:hover .mask.rgba-stylish-slight {\n    opacity: 0.8; }\n\n.file-upload-wrapper .card.card-body.has-preview .btn.btn-sm.btn-danger,\n.file-upload-wrapper .card.card-body.has-preview .btn.btn-sm.btn-success {\n  display: block; }\n\n.file-upload-wrapper .card.card-body.has-error {\n  border: 2px solid #f34141; }\n  .file-upload-wrapper .card.card-body.has-error p.file-upload-error {\n    color: #f34141; }\n  .file-upload-wrapper .card.card-body.has-error .file-upload-message .file-upload-error {\n    display: block; }\n  .file-upload-wrapper .card.card-body.has-error:hover .file-upload-errors-container {\n    visibility: visible;\n    opacity: 1;\n    -webkit-transition-delay: 0s;\n    transition-delay: 0s; }\n  .file-upload-wrapper .card.card-body.has-error:hover .btn.btn-sm.btn-danger {\n    display: block;\n    background-color: #4B515D !important;\n    opacity: 1; }\n\n.file-upload-wrapper .card.card-body.disabled input {\n  cursor: not-allowed; }\n\n.file-upload-wrapper .card.card-body.disabled:hover {\n  background-image: none;\n  -webkit-animation: none;\n  animation: none; }\n\n.file-upload-wrapper .card.card-body.disabled .file-upload-message {\n  opacity: 0.5;\n  text-decoration: line-through; }\n\n.file-upload-wrapper .card.card-body.disabled .file-upload-infos-message {\n  display: none; }\n\n.file-upload-wrapper .card.card-body input {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  opacity: 0;\n  cursor: pointer;\n  z-index: 5; }\n\n.file-upload-wrapper .card.card-body .file-upload-message {\n  position: relative;\n  top: 50px;\n  -webkit-transform: translateY(-50%);\n  transform: translateY(-50%); }\n  .file-upload-wrapper .card.card-body .file-upload-message span.file-icon {\n    font-size: 50px;\n    color: #ccc; }\n  .file-upload-wrapper .card.card-body .file-upload-message p {\n    margin: 5px 0 0 0; }\n    .file-upload-wrapper .card.card-body .file-upload-message p.file-upload-error {\n      color: #f34141;\n      font-weight: bold;\n      display: none; }\n\n.file-upload-wrapper .card.card-body .btn.btn-sm.btn-danger {\n  display: none;\n  position: absolute;\n  opacity: 0;\n  z-index: 7;\n  top: 10px;\n  right: 10px;\n  -webkit-transition: all 0.15s linear;\n  transition: all 0.15s linear; }\n\n.file-upload-wrapper .card.card-body .btn.btn-sm.btn-success {\n  display: none;\n  position: absolute;\n  opacity: 0;\n  z-index: 7;\n  top: 50px;\n  right: 10px;\n  -webkit-transition: all 0.15s linear;\n  transition: all 0.15s linear; }\n\n.file-upload-wrapper .card.card-body .btn.btn-sm .fas,\n.file-upload-wrapper .card.card-body .btn.btn-sm .fab,\n.file-upload-wrapper .card.card-body .btn.btn-sm .far {\n  font-size: 0.7rem; }\n\n.file-upload-wrapper .card.card-body .file-upload-preview {\n  display: block;\n  position: absolute;\n  z-index: 1;\n  background-color: #fff;\n  padding: 5px;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  overflow: hidden;\n  text-align: center; }\n  .file-upload-wrapper .card.card-body .file-upload-preview .file-upload-render .file-upload-preview-img {\n    width: 100%;\n    height: 100%;\n    background-color: #fff;\n    -webkit-transition: border-color 0.15s linear;\n    transition: border-color 0.15s linear;\n    object-fit: cover; }\n  .file-upload-wrapper .card.card-body .file-upload-preview .file-upload-render i {\n    font-size: 80px;\n    top: 50%;\n    left: 50%;\n    -webkit-transform: translate(-50%, -50%);\n    transform: translate(-50%, -50%);\n    position: absolute;\n    color: #777; }\n  .file-upload-wrapper .card.card-body .file-upload-preview .file-upload-render .file-upload-extension {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    -webkit-transform: translate(-50%, -50%);\n    transform: translate(-50%, -50%);\n    margin-top: 10px;\n    text-transform: uppercase;\n    font-weight: 900;\n    letter-spacing: -0.03em;\n    font-size: 1rem;\n    color: #fff;\n    width: 42px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis; }\n  .file-upload-wrapper .card.card-body .file-upload-preview .file-upload-infos {\n    position: absolute;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    z-index: 3;\n    background: rgba(0, 0, 0, 0.7);\n    opacity: 0;\n    -webkit-transition: opacity 0.15s linear;\n    transition: opacity 0.15s linear; }\n    .file-upload-wrapper .card.card-body .file-upload-preview .file-upload-infos .file-upload-infos-inner {\n      position: absolute;\n      top: 50%;\n      -webkit-transform: translate(0, -40%);\n      transform: translate(0, -40%);\n      -webkit-backface-visibility: hidden;\n      backface-visibility: hidden;\n      width: 100%;\n      padding: 0 20px;\n      -webkit-transition: all 0.2s ease;\n      transition: all 0.2s ease; }\n      .file-upload-wrapper .card.card-body .file-upload-preview .file-upload-infos .file-upload-infos-inner p {\n        padding: 0;\n        margin: 0;\n        position: relative;\n        width: 100%;\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        color: #fff;\n        text-align: center;\n        line-height: 25px;\n        font-weight: bold; }\n        .file-upload-wrapper .card.card-body .file-upload-preview .file-upload-infos .file-upload-infos-inner p.file-upload-infos-message {\n          margin-top: 15px;\n          padding-top: 15px;\n          font-size: 12px;\n          position: relative;\n          opacity: 0.5; }\n          .file-upload-wrapper .card.card-body .file-upload-preview .file-upload-infos .file-upload-infos-inner p.file-upload-infos-message::before {\n            content: \"\";\n            position: absolute;\n            top: 0;\n            left: 50%;\n            -webkit-transform: translate(-50%, 0);\n            transform: translate(-50%, 0);\n            background: #fff;\n            width: 30px;\n            height: 2px; }\n\n.file-upload-wrapper .card.card-body:hover .btn.btn-sm.btn-danger,\n.file-upload-wrapper .card.card-body:hover .btn.btn-sm.btn-success {\n  opacity: 1; }\n\n.file-upload-wrapper .card.card-body:hover .file-upload-preview .file-upload-infos {\n  opacity: 1; }\n  .file-upload-wrapper .card.card-body:hover .file-upload-preview .file-upload-infos .file-upload-infos-inner {\n    margin-top: -5px; }\n\n.file-upload-wrapper .card.card-body.touch-fallback {\n  height: auto !important; }\n  .file-upload-wrapper .card.card-body.touch-fallback:hover {\n    background-image: none;\n    -webkit-animation: none;\n    animation: none; }\n  .file-upload-wrapper .card.card-body.touch-fallback .file-upload-preview {\n    position: relative;\n    padding: 0; }\n    .file-upload-wrapper .card.card-body.touch-fallback .file-upload-preview .file-upload-render {\n      display: block;\n      position: relative; }\n      .file-upload-wrapper .card.card-body.touch-fallback .file-upload-preview .file-upload-render .file-upload-font-file {\n        position: relative;\n        -webkit-transform: translate(0, 0);\n        transform: translate(0, 0);\n        top: 0;\n        left: 0; }\n        .file-upload-wrapper .card.card-body.touch-fallback .file-upload-preview .file-upload-render .file-upload-font-file::before {\n          margin-top: 30px;\n          margin-bottom: 30px; }\n      .file-upload-wrapper .card.card-body.touch-fallback .file-upload-preview .file-upload-render img {\n        position: relative;\n        -webkit-transform: translate(0, 0);\n        transform: translate(0, 0); }\n    .file-upload-wrapper .card.card-body.touch-fallback .file-upload-preview .file-upload-infos {\n      position: relative;\n      opacity: 1;\n      background: transparent; }\n      .file-upload-wrapper .card.card-body.touch-fallback .file-upload-preview .file-upload-infos .file-upload-infos-inner {\n        position: relative;\n        top: 0;\n        -webkit-transform: translate(0, 0);\n        transform: translate(0, 0);\n        padding: 5px 90px 5px 0; }\n        .file-upload-wrapper .card.card-body.touch-fallback .file-upload-preview .file-upload-infos .file-upload-infos-inner p {\n          padding: 0;\n          margin: 0;\n          position: relative;\n          width: 100%;\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          color: #777;\n          text-align: left;\n          line-height: 25px; }\n          .file-upload-wrapper .card.card-body.touch-fallback .file-upload-preview .file-upload-infos .file-upload-infos-inner p.file-upload-infos-message {\n            margin-top: 0;\n            padding-top: 0;\n            font-size: 18px;\n            position: relative;\n            opacity: 1; }\n            .file-upload-wrapper .card.card-body.touch-fallback .file-upload-preview .file-upload-infos .file-upload-infos-inner p.file-upload-infos-message::before {\n              display: none; }\n  .file-upload-wrapper .card.card-body.touch-fallback .file-upload-message {\n    -webkit-transform: translate(0, 0);\n    transform: translate(0, 0);\n    padding: 40px 0; }\n  .file-upload-wrapper .card.card-body.touch-fallback .btn.btn-sm.btn-danger {\n    top: auto;\n    bottom: 23px;\n    opacity: 1; }\n  .file-upload-wrapper .card.card-body.touch-fallback.has-preview .file-upload-message {\n    display: none; }\n  .file-upload-wrapper .card.card-body.touch-fallback:hover .file-upload-preview .file-upload-infos .file-upload-infos-inner {\n    margin-top: 5rem; }\n\n.file-upload-wrapper .card.card-body .file-upload-loader {\n  position: absolute;\n  top: 15px;\n  right: 15px;\n  display: none;\n  z-index: 9; }\n  .file-upload-wrapper .card.card-body .file-upload-loader::after {\n    display: block;\n    position: relative;\n    width: 20px;\n    height: 20px;\n    -webkit-animation: rotate 0.6s linear infinite;\n    animation: rotate 0.6s linear infinite;\n    border-radius: 100%;\n    border-top: 1px solid #ccc;\n    border-bottom: 1px solid #777;\n    border-left: 1px solid #ccc;\n    border-right: 1px solid #777;\n    content: \"\"; }\n\n.file-upload-wrapper .card.card-body .file-upload-errors-container {\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 3;\n  background: rgba(243, 65, 65, 0.8);\n  text-align: left;\n  visibility: hidden;\n  opacity: 0;\n  -webkit-transition: visibility 0s linear 0.15s, opacity 0.15s linear;\n  transition: visibility 0s linear 0.15s, opacity 0.15s linear; }\n  .file-upload-wrapper .card.card-body .file-upload-errors-container ul {\n    padding: 10px 20px;\n    margin: 0;\n    position: absolute;\n    left: 0;\n    top: 50%;\n    -webkit-transform: translateY(-50%);\n    transform: translateY(-50%); }\n    .file-upload-wrapper .card.card-body .file-upload-errors-container ul li {\n      margin-left: 20px;\n      color: #fff;\n      font-weight: bold; }\n  .file-upload-wrapper .card.card-body .file-upload-errors-container.visible {\n    visibility: visible;\n    opacity: 1;\n    -webkit-transition-delay: 0s;\n    transition-delay: 0s; }\n\n.file-upload-wrapper .card.card-body ~ .file-upload-errors-container ul {\n  padding: 0;\n  margin: 15px 0; }\n  .file-upload-wrapper .card.card-body ~ .file-upload-errors-container ul li {\n    margin-left: 20px;\n    color: #f34141;\n    font-weight: bold; }\n\n@-webkit-keyframes rotate {\n  0% {\n    -webkit-transform: rotateZ(-360deg);\n    transform: rotateZ(-360deg); }\n  100% {\n    -webkit-transform: rotateZ(0deg);\n    transform: rotateZ(0deg); } }\n\n@keyframes rotate {\n  0% {\n    -webkit-transform: rotateZ(-360deg);\n    transform: rotateZ(-360deg); }\n  100% {\n    -webkit-transform: rotateZ(0deg);\n    transform: rotateZ(0deg); } }\n";
styleInject(css$1);

var fileupload = function fileupload(props) {
  var preview$$1 = props.preview,
      name = props.name,
      fileExt = props.fileExt,
      src = props.src,
      onChangeHandler = props.onChangeHandler,
      removeHandler = props.removeHandler,
      errorMessagesArray = props.errorMessagesArray,
      messageError = props.messageError,
      messageRemove = props.messageRemove,
      messageDefault = props.messageDefault,
      messageReplace = props.messageReplace,
      showErrors = props.showErrors,
      showRemove = props.showRemove,
      onInputClick = props.onInputClick,
      disabled = props.disabled,
      containerHeight = props.containerHeight,
      messageUpload = props.messageUpload,
      showSubmitButton = props.showSubmitButton,
      onSubmitHandler = props.onSubmitHandler,
      rest = _objectWithoutProperties(props, ["preview", "name", "fileExt", "src", "onChangeHandler", "removeHandler", "errorMessagesArray", "messageError", "messageRemove", "messageDefault", "messageReplace", "showErrors", "showRemove", "onInputClick", "disabled", "containerHeight", "messageUpload", "showSubmitButton", "onSubmitHandler"]);

  var cardClasses = ["card-body", 'card', 'view', 'file-upload', 'h-100'];
  var hasError = !!errorMessagesArray.length;
  var height = containerHeight !== 0 ? "".concat(containerHeight, "px") : "100%";
  preview$$1 === true && cardClasses.push('has-preview');
  hasError && cardClasses.push('has-error');
  disabled && cardClasses.push('disabled');
  return /*#__PURE__*/React__default.createElement("div", {
    "data-test": "component-file-upload-wrapper",
    className: "file-upload-wrapper input-group mb-3",
    style: {
      'height': height
    }
  }, /*#__PURE__*/React__default.createElement("div", {
    className: cardClasses.join(' ')
  }, hasError && showErrors && /*#__PURE__*/React__default.createElement(errors, {
    errorMessagesArray: errorMessagesArray
  }), /*#__PURE__*/React__default.createElement(message, {
    messageError: messageError,
    messageDefault: messageDefault,
    hasError: hasError
  }), /*#__PURE__*/React__default.createElement("div", {
    className: "mask rgba-stylish-slight"
  }), /*#__PURE__*/React__default.createElement("input", _extends({
    "data-test": "component-file-input",
    type: "file"
  }, rest, {
    onChange: onChangeHandler,
    onClick: onInputClick,
    disabled: disabled
  })), showErrors && showRemove && /*#__PURE__*/React__default.createElement(button, {
    messageRemove: messageRemove,
    onClick: removeHandler
  }), showSubmitButton && /*#__PURE__*/React__default.createElement(submitButton, {
    messageUpload: messageUpload,
    onClick: onSubmitHandler
  }), preview$$1 && /*#__PURE__*/React__default.createElement(preview, {
    name: name,
    src: src,
    fileExt: fileExt,
    messageReplace: messageReplace
  })));
};

fileupload.propTypes = {
  preview: propTypes.bool.isRequired,
  name: propTypes.string,
  src: propTypes.string,
  fileExt: propTypes.string,
  onChangeHandler: propTypes.func.isRequired,
  removeHandler: propTypes.func.isRequired,
  errorMessagesArray: propTypes.arrayOf(propTypes.string),
  messageError: propTypes.string.isRequired,
  messageRemove: propTypes.string.isRequired,
  messageDefault: propTypes.string.isRequired,
  messageReplace: propTypes.string.isRequired,
  showErrors: propTypes.bool.isRequired,
  showRemove: propTypes.bool.isRequired,
  onInputClick: propTypes.func.isRequired,
  disabled: propTypes.bool.isRequired,
  containerHeight: propTypes.number.isRequired,
  messageUpload: propTypes.string.isRequired,
  showSubmitButton: propTypes.bool.isRequired,
  onSubmitHandler: propTypes.func
};

var getImageFormat = function getImageFormat(width, height) {
  var imgFormat;

  if (width === height) {
    imgFormat = 'square';
  }

  if (width < height) {
    imgFormat = 'portrait';
  }

  if (width > height) {
    imgFormat = 'landscape';
  }

  return imgFormat;
};
var convertSizeToByte = function convertSizeToByte(size) {
  var value = 0;

  if (size !== 0) {
    var unit = size.slice(-1).toUpperCase();
    var kb = 1024;
    var mb = kb * 1024;
    var gb = mb * 1024;

    if (unit === 'K') {
      value = parseFloat(size) * kb;
    } else if (unit === 'M') {
      value = parseFloat(size) * mb;
    } else if (unit === 'G') {
      value = parseFloat(size) * gb;
    }
  }

  return value;
};
var getFileType = function getFileType(name) {
  return name.split('.').pop().toLowerCase();
};

var fileuploadContainer = /*#__PURE__*/function (_Component) {
  _inherits(fileuploadContainer, _Component);

  var _super = _createSuper(fileuploadContainer);

  function fileuploadContainer() {
    var _this;

    _classCallCheck(this, fileuploadContainer);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "state", {
      file: null,
      fileName: '',
      fileSize: undefined,
      isImage: undefined,
      fileWidth: undefined,
      fileHeight: undefined,
      preview: false,
      errorTypes: [],
      fileExt: '',
      imgSrc: ''
    });

    _defineProperty(_assertThisInitialized(_this), "resetPreview", function () {
      _this.setState({
        file: null,
        fileName: '',
        fileSize: undefined,
        isImage: undefined,
        fileWidth: undefined,
        fileHeight: undefined,
        fileExt: '',
        preview: false,
        errorTypes: [],
        imgSrc: ''
      });
    });

    _defineProperty(_assertThisInitialized(_this), "getFileInformations", function (file) {
      var imgFileExtensions = ['png', 'jpg', 'jpeg', 'gif', 'bmp'];
      var fileExt = getFileType(file.name);
      var isImage = imgFileExtensions.indexOf(fileExt) >= 0;
      var fileInfo = {
        fileName: file.name,
        fileSize: file.size,
        isImage: isImage,
        fileWidth: undefined,
        fileHeight: undefined,
        fileExt: fileExt,
        file: file
      };
      return fileInfo;
    });

    _defineProperty(_assertThisInitialized(_this), "onChangeHandler", function (e) {
      var file = e.target.files[0];

      _this.resetPreview();

      _this.readFile(file);
    });

    _defineProperty(_assertThisInitialized(_this), "onInputClick", function (e) {
      e.target.value = '';
    });

    _defineProperty(_assertThisInitialized(_this), "readFile", function (file) {
      var maxFileSizePreview = _this.props.maxFileSizePreview;

      var fileInfo = _this.getFileInformations(file);

      var errorTypes = _this.validateFile(fileInfo);

      var setPreview = fileInfo.isImage && fileInfo.fileSize < convertSizeToByte(maxFileSizePreview);

      _this.setState(_objectSpread2({
        errorTypes: errorTypes
      }, fileInfo), function () {
        setPreview ? _this.readAsDataURL(file) : _this.onFileReady(false);
      });
    });

    _defineProperty(_assertThisInitialized(_this), "validateFile", function (fileInfo) {
      var _this$props = _this.props,
          allowedFileExtensions = _this$props.allowedFileExtensions,
          maxFileSize = _this$props.maxFileSize;
      var fileExt = fileInfo.fileExt,
          fileSize = fileInfo.fileSize;
      var maxFileSizeInByte = convertSizeToByte(maxFileSize);
      var errorsArray = [];

      if (allowedFileExtensions.indexOf('*') < 0 && allowedFileExtensions.indexOf(fileExt) < 0) {
        errorsArray.push('fileExtension');
      }

      if (maxFileSizeInByte !== 0 && fileSize > maxFileSizeInByte) {
        errorsArray.push('fileSize');
      }

      return errorsArray;
    });

    _defineProperty(_assertThisInitialized(_this), "validateImage", function (width, height) {
      var _this$props2 = _this.props,
          minWidth = _this$props2.minWidth,
          maxWidth = _this$props2.maxWidth,
          minHeight = _this$props2.minHeight,
          maxHeight = _this$props2.maxHeight,
          allowedFormats = _this$props2.allowedFormats;
      var imgFormat = getImageFormat(width, height);
      var errorsArray = [];

      if (minWidth !== 0 && minWidth >= width) {
        errorsArray.push('minWidth');
      }

      if (maxWidth !== 0 && maxWidth <= width) {
        errorsArray.push('maxWidth');
      }

      if (minHeight !== 0 && minHeight >= height) {
        errorsArray.push('minHeight');
      }

      if (maxHeight !== 0 && maxHeight <= height) {
        errorsArray.push('maxHeight');
      }

      if (allowedFormats.indexOf(imgFormat) < 0) {
        errorsArray.push('imageFormat');
      }

      return errorsArray;
    });

    _defineProperty(_assertThisInitialized(_this), "readAsDataURL", function (file) {
      var reader = new FileReader();
      var src;
      reader.addEventListener("load", function () {
        src = reader.result;

        _this.createImgNode(src);
      });
      reader.readAsDataURL(file);
    });

    _defineProperty(_assertThisInitialized(_this), "createImgNode", function (src) {
      var img = document.createElement('img');
      img.src = src;
      var onFileReady = _this.onFileReady;

      img.onload = function () {
        var width = this.width;
        var height = this.height;
        onFileReady(true, src, width, height);
      };
    });

    _defineProperty(_assertThisInitialized(_this), "onFileReady", function (previewable, src, width, height) {
      var errorTypes = _toConsumableArray(_this.state.errorTypes);

      if (previewable) {
        var imgValidationErrors = _this.validateImage(width, height);

        errorTypes = errorTypes.concat(imgValidationErrors);
      }

      errorTypes.length === 0 ? _this.setPreview(previewable, src, width, height) : _this.setState({
        errorTypes: errorTypes
      });
    });

    _defineProperty(_assertThisInitialized(_this), "setPreview", function (previewable, imgSrc, fileWidth, fileHeight) {
      if (previewable === true) {
        _this.setState({
          preview: true,
          fileHeight: fileHeight,
          fileWidth: fileWidth,
          imgSrc: imgSrc
        });
      } else {
        _this.setState({
          preview: true
        });
      }

      _this.props.getValue && _this.props.getValue(_this.state.file);
    });

    _defineProperty(_assertThisInitialized(_this), "componentDidMount", function () {
      var defaultFileSrc = _this.props.defaultFileSrc;

      if (defaultFileSrc.trim() !== '') {
        var fileName = defaultFileSrc.split('\\').pop();

        if (fileName === defaultFileSrc) {
          fileName = defaultFileSrc.split('/').pop();
        }

        _this.setState({
          fileName: fileName
        }, function () {
          return _this.createImgNode(defaultFileSrc);
        });
      }
    });

    return _this;
  }

  _createClass(fileuploadContainer, [{
    key: "render",
    value: function render() {
      var _this$props3 = this.props,
          errorMinWidth = _this$props3.errorMinWidth,
          errorMaxWidth = _this$props3.errorMaxWidth,
          errorMinHeight = _this$props3.errorMinHeight,
          errorMaxHeight = _this$props3.errorMaxHeight,
          errorImageFormat = _this$props3.errorImageFormat,
          errorFileExtension = _this$props3.errorFileExtension,
          errorFileSize = _this$props3.errorFileSize,
          messageRemove = _this$props3.messageRemove,
          messageError = _this$props3.messageError,
          messageDefault = _this$props3.messageDefault,
          messageReplace = _this$props3.messageReplace,
          showErrors = _this$props3.showErrors,
          showRemove = _this$props3.showRemove,
          minWidth = _this$props3.minWidth,
          maxWidth = _this$props3.maxWidth,
          minHeight = _this$props3.minHeight,
          maxHeight = _this$props3.maxHeight,
          allowedFileExtensions = _this$props3.allowedFileExtensions,
          allowedFormats = _this$props3.allowedFormats,
          maxFileSize = _this$props3.maxFileSize,
          disabled = _this$props3.disabled,
          containerHeight = _this$props3.containerHeight,
          showSubmitButton = _this$props3.showSubmitButton,
          messageUpload = _this$props3.messageUpload,
          onSubmitHandler = _this$props3.onSubmitHandler;
      var _this$state = this.state,
          imgSrc = _this$state.imgSrc,
          preview = _this$state.preview,
          fileName = _this$state.fileName,
          fileExt = _this$state.fileExt;
      var errorMessagesArray = [];
      this.state.errorTypes.forEach(function (errorType) {
        switch (errorType) {
          case 'minWidth':
            errorMessagesArray.push(errorMinWidth || "The image width is too small (".concat(minWidth, "px min)."));
            break;

          case 'maxWidth':
            errorMessagesArray.push(errorMaxWidth || "The image width is too big (".concat(maxWidth, "px max)."));
            break;

          case 'minHeight':
            errorMessagesArray.push(errorMinHeight || "The image height is too small (".concat(minHeight, "px min)."));
            break;

          case 'maxHeight':
            errorMessagesArray.push(errorMaxHeight || "The image height is too big (".concat(maxHeight, "px max)."));
            break;

          case 'imageFormat':
            errorMessagesArray.push(errorImageFormat || "The image format is not allowed (".concat(allowedFormats, " only)."));
            break;

          case 'fileExtension':
            errorMessagesArray.push(errorFileExtension || "The file is not allowed (".concat(allowedFileExtensions.join(", "), " only)."));
            break;

          case 'fileSize':
            errorMessagesArray.push(errorFileSize || "The file size is too big (".concat(maxFileSize, " max)."));
            break;

          default:
            errorMessagesArray.push(messageError);
            break;
        }
      });
      return /*#__PURE__*/React__default.createElement(fileupload, {
        name: fileName,
        fileExt: fileExt,
        src: imgSrc,
        preview: preview,
        errorMessagesArray: errorMessagesArray,
        onChangeHandler: this.onChangeHandler,
        removeHandler: this.resetPreview,
        onInputClick: this.onInputClick,
        messageError: messageError,
        messageRemove: messageRemove,
        messageDefault: messageDefault,
        messageReplace: messageReplace,
        showErrors: showErrors,
        showRemove: showRemove,
        disabled: disabled,
        containerHeight: containerHeight,
        showSubmitButton: showSubmitButton,
        messageUpload: messageUpload,
        onSubmitHandler: onSubmitHandler
      });
    }
  }]);

  return fileuploadContainer;
}(React.Component);

fileuploadContainer.defaultProps = {
  messageDefault: 'Drag and drop a file here or click',
  messageReplace: 'Drag and drop or click to replace',
  messageRemove: 'Remove',
  messageError: 'Ooops, something wrong happended.',
  defaultFileSrc: '',
  maxFileSize: "2M",
  minWidth: 0,
  maxWidth: 0,
  minHeight: 0,
  maxHeight: 0,
  showRemove: true,
  showErrors: true,
  maxFileSizePreview: '5M',
  allowedFormats: ['portrait', 'square', 'landscape'],
  allowedFileExtensions: ['*'],
  disabled: false,
  containerHeight: 230,
  showSubmitButton: false,
  messageUpload: "Submit"
};
fileuploadContainer.propTypes = {
  messageDefault: propTypes.string,
  messageReplace: propTypes.string,
  messageRemove: propTypes.string,
  messageError: propTypes.string,
  defaultFileSrc: propTypes.string,
  maxFileSize: propTypes.string,
  minWidth: propTypes.number,
  maxWidth: propTypes.number,
  minHeight: propTypes.number,
  maxHeight: propTypes.number,
  showRemove: propTypes.bool,
  showErrors: propTypes.bool,
  maxFileSizePreview: propTypes.string,
  allowedFormats: propTypes.arrayOf(propTypes.oneOf(['square', 'portrait', 'landscape'])),
  allowedFileExtensions: propTypes.arrayOf(propTypes.string),
  errorFileSize: propTypes.string,
  errorMinWidth: propTypes.string,
  errorMaxWidth: propTypes.string,
  errorMinHeight: propTypes.string,
  errorMaxHeight: propTypes.string,
  errorImageFormat: propTypes.string,
  errorFileExtension: propTypes.string,
  disabled: propTypes.bool,
  containerHeight: propTypes.number,
  getValue: propTypes.func,
  onSubmitHandler: propTypes.func,
  showSubmitButton: propTypes.bool
};

module.exports = fileuploadContainer;
