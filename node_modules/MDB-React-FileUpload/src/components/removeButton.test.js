import React from 'react';
import { shallow } from 'enzyme';
import { findByTestAttr, checkProps } from '../test/testUtils.js';
import Button from './removeButton';

const onButtonClick = jest.fn();

const defaultProps = {
    onClick: onButtonClick,
    messageRemove: "Remove"
}

const setup = (props = {}) => {
    const setupProps = { ...defaultProps, ...props };
    const wrapper = shallow(<Button {...setupProps} />);
    return wrapper;
}


describe('Remove Button', () => {
    let wrapper;

    beforeEach(() => {
        wrapper = setup();
    });

    afterEach(() => {
        wrapper = undefined;
    });

    test('fires custom function on onClick event', () => {
        const Btn = findByTestAttr(wrapper, 'component-remove-btn');
        Btn.dive().find('button').simulate('click');
        expect(onButtonClick.mock.calls.length).toEqual(1);
    });

    test('renders without errors', () => {
        const Btn = findByTestAttr(wrapper, 'component-remove-btn');
        expect(Btn.length).toBe(1);
    });

    test('renders icon', () => {
        const Icon = findByTestAttr(wrapper, 'component-icon');
        expect(Icon.length).toBe(1);
    });

    test('does not throw warning with expected props', () => {
        checkProps(Button, defaultProps);
    });

    test('renders custom text passed through as a messageRemove prop', () => {
        const customProps = { messageRemove: "Custom message" }
        const wrapper = setup(customProps);
        const Btn = findByTestAttr(wrapper, 'component-remove-btn');
        expect(Btn.dive().find('button').childAt(0).text()).toBe('Custom message');
    });
});







