import React from 'react';
import { shallow } from 'enzyme';
import { findByTestAttr, checkProps } from '../test/testUtils.js';
import ErrorMsg from './errors';


const defaultProps = {
    errorMessagesArray: []
}

const setup = (props = {}) => {
    const setupProps = { ...defaultProps, ...props };
    const wrapper = shallow(<ErrorMsg {...setupProps} />);
    return wrapper;
}

describe('error message', () => {
    let wrapper;

    beforeEach(() => {
        wrapper = setup();
    });

    afterEach(() => {
        wrapper = undefined;
    });

    test('renders without errors', () => {
        const list = findByTestAttr(wrapper, 'component-list');
        expect(list.length).toBe(1);
    });

    test('does not throw error with expected props', () => {
        checkProps(ErrorMsg, defaultProps);
    });

    test('renders correct number of list items', () => {
        const props = {
            errorMessagesArray: ['The image width is too small', 'The file size is too big', 'The image height is too small', 'The image width is too big']
        }

        const wrapper = setup(props);
        const listItems = findByTestAttr(wrapper, 'component-list-item');
        expect(listItems.length).toBe(props.errorMessagesArray.length)
    });

    test('every list item renders correct error message', () => {
        const props = {
            errorMessagesArray: ['The image width is too small', 'The file size is too big', 'The image height is too small', 'The image width is too big']
        }

        const wrapper = setup(props);
        const listItems = findByTestAttr(wrapper, 'component-list-item');

        const texts = listItems.map(node => node.text());
        expect(texts).toEqual(props.errorMessagesArray);

    });

});