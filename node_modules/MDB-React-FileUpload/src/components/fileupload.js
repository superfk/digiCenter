import React from 'react';
import PropTypes from 'prop-types';
import Message from './message';
import Errors from "./errors";
import Preview from './preview';
import RemoveButton from './removeButton';
import SubmitButton from './submitButton';
import "../styles/main.scss";

const fileupload = props => {
    const {
        preview,
        name,
        fileExt,
        src,
        onChangeHandler,
        removeHandler,
        errorMessagesArray,
        messageError,
        messageRemove,
        messageDefault,
        messageReplace,
        showErrors,
        showRemove,
        onInputClick,
        disabled,
        containerHeight,
        messageUpload,
        showSubmitButton,
        onSubmitHandler,
        ...rest }
        = props;

    const cardClasses = ["card-body", 'card', 'view', 'file-upload', 'h-100'];
    const hasError = !!errorMessagesArray.length;
    const height = containerHeight !== 0 ? `${containerHeight}px` : "100%";
    preview === true && cardClasses.push('has-preview');
    hasError && cardClasses.push('has-error');
    disabled && cardClasses.push('disabled');

    return (
        <div data-test="component-file-upload-wrapper" className="file-upload-wrapper input-group mb-3" style={{
            'height': height
        }}>
            <div className={cardClasses.join(' ')} >
                {(hasError && showErrors) && <Errors errorMessagesArray={errorMessagesArray} />}
                <Message messageError={messageError} messageDefault={messageDefault} hasError={hasError} />
                <div className="mask rgba-stylish-slight" />
                <input data-test="component-file-input" type="file" {...rest} onChange={onChangeHandler} onClick={onInputClick} disabled={disabled} />
                {(showErrors && showRemove) && <RemoveButton messageRemove={messageRemove} onClick={removeHandler} />}
                {showSubmitButton && <SubmitButton messageUpload={messageUpload} onClick={onSubmitHandler} />}
                {preview && <Preview name={name} src={src} fileExt={fileExt} messageReplace={messageReplace} />}
            </div>
        </div>

    );
};

fileupload.propTypes = {
    preview: PropTypes.bool.isRequired,
    name: PropTypes.string,
    src: PropTypes.string,
    fileExt: PropTypes.string,
    onChangeHandler: PropTypes.func.isRequired,
    removeHandler: PropTypes.func.isRequired,
    errorMessagesArray: PropTypes.arrayOf(PropTypes.string),
    messageError: PropTypes.string.isRequired,
    messageRemove: PropTypes.string.isRequired,
    messageDefault: PropTypes.string.isRequired,
    messageReplace: PropTypes.string.isRequired,
    showErrors: PropTypes.bool.isRequired,
    showRemove: PropTypes.bool.isRequired,
    onInputClick: PropTypes.func.isRequired,
    disabled: PropTypes.bool.isRequired,
    containerHeight: PropTypes.number.isRequired,
    messageUpload: PropTypes.string.isRequired,
    showSubmitButton: PropTypes.bool.isRequired,
    onSubmitHandler: PropTypes.func
}


export default fileupload;
