'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = require('react');
var React__default = _interopDefault(React);
var reactSortableHoc = require('react-sortable-hoc');
var arrayMove = _interopDefault(require('array-move'));
var PropTypes = _interopDefault(require('prop-types'));

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _possibleConstructorReturn(self, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _createSuper(Derived) {
  return function () {
    var Super = _getPrototypeOf(Derived),
        result;

    if (_isNativeReflectConstruct()) {
      var NewTarget = _getPrototypeOf(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return _possibleConstructorReturn(this, result);
  };
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}

function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(n);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];

  return arr2;
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function styleInject(css, ref) {
  if ( ref === void 0 ) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') { return; }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css_248z = "li[data-sortable] {\r\n  -moz-user-select: none;\r\n  -webkit-user-select: none;\r\n  user-select: none;\r\n}";
styleInject(css_248z);

var SortableItem = reactSortableHoc.SortableElement(function (_ref) {
  var value = _ref.value,
      itemClassName = _ref.itemClassName,
      disabledClassName = _ref.disabledClassName,
      disabled = _ref.disabled;
  var classnames = [];
  itemClassName && classnames.push(itemClassName);
  disabled && disabledClassName && classnames.push(disabledClassName);
  return /*#__PURE__*/React__default.createElement("li", {
    "data-sortable": true,
    tabIndex: 0,
    className: classnames.join(" ")
  }, value);
});
SortableItem.propTypes = {
  itemClassName: PropTypes.string,
  disabledClassName: PropTypes.string,
  disabled: PropTypes.bool
};

var List = reactSortableHoc.SortableContainer(function (_ref) {
  var items = _ref.items,
      listClassName = _ref.listClassName,
      itemClassName = _ref.itemClassName,
      disabledClassName = _ref.disabledClassName;
  return /*#__PURE__*/React__default.createElement("ul", {
    className: listClassName ? listClassName : null
  }, items.map(function (item, index) {
    return /*#__PURE__*/React__default.createElement(SortableItem, {
      key: item.props && item.props.id ? item.props.id : index,
      collection: item.props && item.props.collection ? item.props.collection : 0,
      disabled: item.props && item.props.disabled ? item.props.disabled : false,
      index: index,
      value: item,
      itemClassName: itemClassName ? itemClassName : null,
      disabledClassName: disabledClassName ? disabledClassName : null
    });
  }));
});

var Sortable = /*#__PURE__*/function (_Component) {
  _inherits(Sortable, _Component);

  var _super = _createSuper(Sortable);

  function Sortable() {
    var _this;

    _classCallCheck(this, Sortable);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "state", {
      items: []
    });

    _defineProperty(_assertThisInitialized(_this), "updateEverything", function (propsItem) {
      if (_this.props.multipleItems) {
        var items = [];
        propsItem.forEach(function (collection) {
          return items.push.apply(items, _toConsumableArray(collection));
        });

        _this.setState({
          items: items
        });
      } else {
        var _items = propsItem;

        _this.setState({
          items: _items
        });
      }
    });

    _defineProperty(_assertThisInitialized(_this), "onSortEnd", function (_ref2) {
      var oldIndex = _ref2.oldIndex,
          newIndex = _ref2.newIndex;

      _this.setState(function (_ref3) {
        var items = _ref3.items;
        return {
          items: arrayMove(items, oldIndex, newIndex)
        };
      });
    });

    return _this;
  }

  _createClass(Sortable, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.updateEverything(this.props.items);
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevState, prevProps) {
      var items = this.props.items;

      if (items !== prevState.items) {
        this.updateEverything(items);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          items = _this$props.items,
          attributes = _objectWithoutProperties(_this$props, ["items"]);

      return /*#__PURE__*/React__default.createElement(List, _extends({
        items: this.state.items,
        onSortEnd: this.props.onSortEnd ? this.props.onSortEnd : this.onSortEnd
      }, attributes));
    }
  }]);

  return Sortable;
}(React.Component);
Sortable.propTypes = {
  axis: PropTypes.string,
  disableAutoscroll: PropTypes.bool,
  disabledClassName: PropTypes.string,
  distance: PropTypes.number,
  helperClass: PropTypes.string,
  helperContainer: PropTypes.oneOfType([PropTypes.func, PropTypes.instanceOf(Element)]),
  hideSortableGhost: PropTypes.bool,
  items: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),
  lockAxis: PropTypes.string,
  lockOffset: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),
  lockToContainerEdges: PropTypes.bool,
  pressDelay: PropTypes.number,
  shouldCancelStart: PropTypes.func,
  onSortEnd: PropTypes.func,
  onSortMove: PropTypes.func,
  onSortOver: PropTypes.func,
  onSortStart: PropTypes.func,
  transitionDuration: PropTypes.number,
  useWindowAsScrollContainer: PropTypes.bool
};
Sortable.defaultProps = {
  axis: "y",
  disableAutoscroll: false,
  distance: 0,
  hideSortableGhost: true,
  lockToContainerEdges: false,
  lockOffset: "0%",
  pressDelay: 0,
  transitionDuration: 400,
  useWindowAsScrollContainer: false
};

module.exports = Sortable;
