import React, { Component } from 'react';
import PropTypes from "prop-types";

class HtmlElementPicker extends Component {
    state = {
        expanded: false
    }

    onClickHandler = () => {
        this.setState({ expanded: !this.state.expanded });
    }

    collapse = () => {
        this.setState({ expanded: false });
    }

    preventBlure = e => {
        e.preventDefault();
    }

    setTextStyle = textStyle => () => {
        this.props.modify('formatBlock', textStyle)();
    }

    getTextStyle = textStyle => {
        const { heading, paragraph, preformatted } = this.props.translations;

        switch (textStyle) {
            case 'h1':
                return `${heading} 1`;
            case 'h2':
                return `${heading} 2`;
            case 'h3':
                return `${heading} 3`;
            case 'h4':
                return `${heading} 4`;
            case 'h5':
                return `${heading} 5`;
            case 'h6':
                return `${heading} 6`;
            case 'p':
                return `${paragraph}`;
            case 'pre':
                return `${preformatted}`;
            default:
                break;
        }
    }

    render() {
        const { disabled, textStyle } = this.props;

        return (
            <div className="mdb-wysiwyg-toolbar-group py-1" tabIndex="0" onBlur={this.collapse}>
                <button disabled={disabled} onClick={this.onClickHandler} className='mdb-wysiwyg-list-button'>
                    {this.getTextStyle(textStyle)}
                    <i className="fas fa-chevron-down fa-sm pl-2" />
                </button>
                <ul className="mdb-wysiwyg-list" onMouseDown={this.preventBlure}>
                    {
                        this.state.expanded &&
                        <>
                            <li><a href="#!" onClick={this.setTextStyle('p')}>{this.getTextStyle('p')}</a></li>
                            <li><a href="#!" onClick={this.setTextStyle('h1')}>{this.getTextStyle('h1')}</a></li>
                            <li><a href="#!" onClick={this.setTextStyle('h2')}>{this.getTextStyle('h2')}</a></li>
                            <li><a href="#!" onClick={this.setTextStyle('h3')}>{this.getTextStyle('h3')}</a></li>
                            <li><a href="#!" onClick={this.setTextStyle('h4')}>{this.getTextStyle('h4')}</a></li>
                            <li><a href="#!" onClick={this.setTextStyle('h5')}>{this.getTextStyle('h5')}</a></li>
                            <li><a href="#!" onClick={this.setTextStyle('h6')}>{this.getTextStyle('h6')}</a></li>
                            <li><a href="#!" onClick={this.setTextStyle('pre')}>{this.getTextStyle('pre')}</a></li>
                        </>
                    }
                </ul>
            </div >
        );
    }
}


HtmlElementPicker.propTypes = {
    disabled: PropTypes.bool.isRequired,
    translations: PropTypes.objectOf(PropTypes.string).isRequired,
    textStyle: PropTypes.string.isRequired
}


export default HtmlElementPicker;