import React from "react";
import { Manager, Target, Popper, Arrow } from "react-popper";
import PropTypes from "prop-types";

class Tooltip extends React.Component {

    state = {
        visible: false
    }

    show = () => {
        this.setVisibility(true);
    }

    hide = () => {
        this.setVisibility(false);
    }

    setVisibility = (visible) => {
        this.setState(
            Object.assign({}, this.state, {
                visible
            })
        );
    }

    render() {
        const {
            placement,
            component,
            componentStyle,
            className,
            children,
            tooltipContent,
            componentTooltip,
            componentClass,
            wrapperStyle,
            tag
        } = this.props;

        const classes = className;

        const componentClasses = componentClass;

        const tooltipClasses = ["tooltip fade"]
        placement && tooltipClasses.push("bs-tooltip-" + placement);
        this.state.visible && tooltipClasses.push("show");

        const wrapperStyles = wrapperStyle ? wrapperStyle : {};

        const arrowClasses = "arrow";

        return (
            <Manager tag={tag} className={classes} style={wrapperStyles}>
                <Target
                    component={component}
                    style={componentStyle}
                    className={componentClasses}
                    onMouseEnter={this.show}
                    onMouseLeave={this.hide}
                    onTouchStart={this.show}
                    onTouchEnd={this.hide}
                >
                    {children}
                </Target>
                {
                    this.state.visible &&
                    <Popper placement={placement} component={componentTooltip}>
                        {({ popperProps }) => (
                            <div {...popperProps} className={tooltipClasses.join(' ')}>
                                <div className="tooltip-inner">{tooltipContent}</div>
                                <Arrow>
                                    {({ arrowProps }) => (
                                        <span {...arrowProps} className={arrowClasses} />
                                    )}
                                </Arrow>
                            </div>
                        )}
                    </Popper>
                }
            </Manager>
        );
    }
}

Tooltip.propTypes = {
    placement: PropTypes.string,
    component: PropTypes.string,
    componentStyle: PropTypes.string,
    tooltipContent: PropTypes.string,
    tooltipClass: PropTypes.string,
    arrowClass: PropTypes.string,
    componentTooltip: PropTypes.string,
    componentClass: PropTypes.string,
    children: PropTypes.node,
    tag: PropTypes.string,
    className: PropTypes.string,
    wrapperStyle: PropTypes.object
};

export default Tooltip;
export { Tooltip as MDBTooltip };
